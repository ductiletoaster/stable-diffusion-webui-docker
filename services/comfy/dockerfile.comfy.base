FROM runtime AS base

# ARG PUID=1001
# ARG PGID=1001
# RUN groupadd -g $PGID comfy && \
#     useradd -m -u $PUID -g $PGID comfy

USER ubuntu

WORKDIR /home/ubuntu

SHELL ["/bin/bash", "--login", "-c"]

# Configure uv cache to work with Docker BuildKit cache
ENV UV_CACHE_DIR=~/.cache/uv
ENV UV_LINK_MODE=copy 

RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
  uv venv .venv

# @todo this approach is creating a much larger image compared to manual install of the repo 12.7GB -> 15.3GB
# Either the comfy cli or cm-cli can be used for managing the ComfyUI installation and extensions
# @todo https://github.com/Comfy-Org/ComfyUI-Manager/blob/main/docs/en/cm-cli.md
RUN --mount=type=cache,target=~/.cache/uv,sharing=locked \
  source ~/.venv/bin/activate && \
  uv pip install comfy-cli && \
  comfy --skip-prompt --workspace /home/ubuntu/app install --nvidia --skip-manager && \
  comfy --skip-prompt set-default /home/ubuntu/app && \
  comfy --skip-prompt --no-enable-telemetry env
# RUN git clone --branch v0.3.43 --depth 1 https://github.com/comfyanonymous/ComfyUI.git app

WORKDIR /home/ubuntu/app

COPY --chown=ubuntu:ubuntu . .

RUN chmod u+x ./entrypoint.sh && \
  chmod u+x ./runner.sh

# Set environment variables
ENV CLI_ARGS=""
ENV COMFY_PORT=8188
ENV BASE_DIRECTORY="/data/config/comfy"
ENV OUTPUT_DIRECTORY="/output"

EXPOSE $COMFY_PORT

ENTRYPOINT ["./entrypoint.sh"]

CMD ["bash", "./runner.sh"]